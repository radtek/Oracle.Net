#pragma checksum "C:\Users\DELL\Desktop\Oracle数据库学习平台\Oracle.Net\Oracle.Net\Views\Home\Scene4.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dc4dde65932e608f8a64898afe58bbd0d5436a48"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Scene4), @"mvc.1.0.view", @"/Views/Home/Scene4.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Scene4.cshtml", typeof(AspNetCore.Views_Home_Scene4))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\DELL\Desktop\Oracle数据库学习平台\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net;

#line default
#line hidden
#line 2 "C:\Users\DELL\Desktop\Oracle数据库学习平台\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc4dde65932e608f8a64898afe58bbd0d5436a48", @"/Views/Home/Scene4.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc752d9315d7ca55328b89a9ad65e59d586dbd3d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Scene4 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/teaching"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("float:right;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/testonline/4"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\DELL\Desktop\Oracle数据库学习平台\Oracle.Net\Oracle.Net\Views\Home\Scene4.cshtml"
  
    ViewData["Title"] = "Scene4";

#line default
#line hidden
            BeginContext(44, 66, true);
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"news-detail\">\r\n        ");
            EndContext();
            BeginContext(110, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d43be151d11408581c7cda65e7d4015", async() => {
                BeginContext(157, 2, true);
                WriteLiteral("返回");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(163, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(173, 77, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f65071ddf4c3462faf494b384e0e863a", async() => {
                BeginContext(224, 22, true);
                WriteLiteral("前往测试&nbsp;&nbsp;&nbsp;");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(250, 5326, true);
            WriteLiteral(@"
        <h1><strong>Oracle 11g的PL/SQL引擎和SQL引擎。</strong></h1>
        <div>
            <p>
                <span style=""font-family:Arial;line-height:26px;"">
                    <span style=""font-size:12px;"">
                        oracle 使用2个引擎来执行SQL和代码块：SQL 引擎和PL/SQL 引擎， Oracle 使用这2个引擎来执行PL/SQL blocks 和 subprograms。
                    </span>
                </span>
            </p>
            <p><br /></p>
            <p>
                <strong>1、sql引擎介绍</strong><br />
                一条sql语句在sql引擎中，大致会经过如下三个步骤：解析（parse）、执行（execute）、获取（fetch）：这三个步骤分别由sql引擎的不同的组件完成。
            </p>
            <p><strong>1.1、sql编译器（sql compiler）</strong></p>
            <p><img src=""https://img-blog.csdn.net/20140328182104078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3ltbV9saXU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"" alt="""" /><br /></p>
            <p><strong>解析器(parser)：</strong></p>
            <p><strong>查询优化器（Query Optimizer）：</strong>为语句生成一组可能被使用的执行计划，估算出每个执");
            WriteLiteral(@"行计划的代价，调用计划生成器（Plan Generator）生成计划，比较计划的代价，最终选择一个代价最小的执行计划（注意代价估算器只能估算出代价，并不能选择出最优的，来让计划生成器生成那个最优的，而是让计划生成器生成所有的执行计划，再进行比较）。</p>
            <p>通过上图也可以看到，查询优化器包含了：查询转换器（Query Transform）、代价估算器（Estimator）、计划生成器。</p>
            <p>那么，我们继续看下查询优化器包含的这三个组件的用途：<br /></p>
            <blockquote style=""border:none;"">
                <p>查询转换器：决定是否重写用户的查询（包括视图合并，子查询反嵌套），以生成更好的查询计划。</p>
                <p>代价估算器：代价估算器使用统计数据来估算操作的选择率（selectivity）、返回数据集的势（Cardinality）和代价。并最终估算出整个执行计划的代价。</p>
            </blockquote>
            <blockquote style=""border:none;"">计划生成器：计划生成器会考虑可能的访问路径（Access Path）、关联的方法和关联的顺序，生成不同的执行计划，让查询优化器从这些计划中选择代价最小的一个执行计划。</blockquote>
            <p><br /></p>
            <p>行源生成器（Row Source Generator）：行源生成器从查询优化器接收到优化的执行计划，然后为该计划生成行源（Row Source）。行源是一个可被迭代控制的结构体，它能以迭代方式处理一组数据行、并生成一组数据行。</p>
            <p><br /></p>
            <p></p>
            <p><strong>1.2、sql执行引擎（sql Execution Engine）</strong></p>
            <div>sql执行引擎依照语句的执行计划进行操作，产生查询结果。在每一个操作中，sql执行行引擎会以迭代的方式执行行源、生成数据行。</div");
            WriteLiteral(@">
            <div><br /></div>
            <div><br /></div>
            <div><strong>1.3、执行计划的生成</strong></div>
            <div>当前实例内存中的执行计划，可以通过视图：v$sql_plan读取。</div>
            <div>启用了awr时，oracle会将内存的执行计划存到历史数据中，我们可以通过查询sql语句，或者oracle提供的系统包dbms_xplan从历史数据中读取。</div>
            <div><br /></div>
            <div><br /></div>
            <div>除了通过执行sql让oracle在内存中生成执行计划外，我们还可以通过命令Explain Plan让优化器仅对sql语句进行解释，生成执行计划，由于语句并不会真正执行，因此它可以含有没有赋值的绑定变量。执行explain plan命令后，oracle会将解释生成的查询计划插入表SYS.PLAN_TABLE$中。然后我们就可以通过查询语句或者包：dbms_xplan从该表中读取查询计划咯。</div>
            <div>注意：通过explain plan解释出来的查询计划不会被缓存到内存中，供语句执行时重用。</div>
            <div><br /></div>
            <div><br /></div>
            <div><strong>2、pl/sql介绍</strong><br /></div>
            <div class=""htmledit_views"">

                (1)PL/SQL俗称过程化SQL语言(Procedural Language/SQL),是Oracle对SQL的
                <p>

                    <strong><em>过程化扩充</em></strong>而形成的程序开发语言。在普通SQL语句的使用上增加了编程语言的特点，<br />
                    所以PL/SQL就是把数据操作和查询");
            WriteLiteral(@"语句组织在PL/SQL代码的过程性单元中，通过逻辑判断、循环等操作实现复杂的功能或者计算的程序语言。

                </p>
                <p>

                    <br />
                    (2)PL/SQL中提供了和其他高级语言类似的<strong><em>块操作，条件判断，循环结构</em></strong>等特性，<br />
                    将SQL的数据操纵功能与过程化语言的流程控制结构结合起来，能够完善更复杂的业务处理<br /><br />
                    (3)PL/SQL程序不能在Oracle以外的其他关系型数据库管理系统中运行<br /><br />
                <p><strong>2.1、PL/SQL的特点</strong></p>
                (1)PL/SQL是一种<strong><em>块结构</em>语</strong>言，一个PL/SQL程序就是一个块，块中可以嵌套子块,能够使一组SQL语句的功能更具模块化程序特点;<br />
                (2)每个块中可以定义变量，变量的作用范围仅限于该块;<br />
                (3)PL/SQL程序块中可以使用SQL的查询语句，DML(表的增删改操作)语句及事务处理语句,可以对程序中的错误进行自动处理，使程序能够在遇到错误的时候不会被中断;<br />
                (4)PL/SQL程序<strong><em>大小写不敏感</em></strong><br />
                (5)Oracle中的PL/SQL引擎负责解释和执行PL/SQL程序，PL/SQL程序可以直接和SQL引擎进行交互<br />
                <em>PL/SQL引擎的作用：编写的SQL语句，通过网络、java程序或者客户端工具发送给关系型数据库管理系统，PL/SQL引擎负责拿到这个字符串(SQL语句就是一个字符串文本格式),对其SQL语句进行语法分析，判断该SQL语句否符合Oracle中的语法要求，若符合，则执行SQL语句</em><br /><br />
 ");
            WriteLiteral(@"               <p><strong>2.2、PL/SQL程序块与SQL语言的区别：</strong></p><em>(1)SQL语句:通过多条SQL语句实现功能时，每条语句都需要在客户端和服务端传递，而且每条语句的执行结果也需要在网络中进行交互，占用了大量的网络带宽，消耗了大量网络传递的时间，而在网络中传输的那些结果，往往都是中间结果，而不是我们所关心的。<br />(2)PL/SQL程序块:而使用PL/SQL程序是因为程序代码存储在数据库中，程序的分析和执行完全在数据库内部进行，用户所需要做的就是在客户端发出调用PL/SQL的执行命令，数据库接收到执行命令后，在数据库内部完成整个PL/SQL程序的执行，并将最终的执行结果反馈给用户。在整个过程中网络里只传输了很少的数据，减少了网络传输占用的时间，所以整体程序的执行性能会有明显的提高。</span></em>
                </span><br />
                </span>
                </p>
                <p><em></em></p>
                <p>

                <p><strong>2.3、PL/SQL块由以下三个部分组成：</strong></p>
                <em>声明部分(可选)</span></em>：声明常量、变量、复杂数据类型、游标等;<br />
                <em>(执行部分(必须)</em>：包含若干语句以实现特定功能;<br />
                <em>异常处理部分(可选)</em>：处理运行错误<br />
                <br />
                <p><strong>2.4、PL/SQL块结构：</strong></p>
                declare
                <br />
                <em>声明部分</em><br />
                begin<br />
                <em>执行部分，可包含SQL语句或PL/SQL控制语句</em><br />
     ");
            WriteLiteral("           exception<br />\r\n                <em>异常处理部分</em><br />\r\n                end;\r\n                <br />\r\n\r\n                <div><br /></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
