#pragma checksum "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\Home\Scene6.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d908224b2c1847fa09030ee2c69a38545b6565ac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Scene6), @"mvc.1.0.view", @"/Views/Home/Scene6.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Scene6.cshtml", typeof(AspNetCore.Views_Home_Scene6))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net;

#line default
#line hidden
#line 2 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d908224b2c1847fa09030ee2c69a38545b6565ac", @"/Views/Home/Scene6.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc752d9315d7ca55328b89a9ad65e59d586dbd3d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Scene6 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/teaching"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("float:right;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/testonline/6"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\Home\Scene6.cshtml"
  
    ViewData["Title"] = "Scene6";

#line default
#line hidden
            BeginContext(44, 66, true);
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"news-detail\">\r\n        ");
            EndContext();
            BeginContext(110, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "565894a543c446c9a7fb8768b8c78e0e", async() => {
                BeginContext(157, 2, true);
                WriteLiteral("返回");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(163, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(173, 77, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d28a19f93fd4fd0ac4c3f9be7a746cf", async() => {
                BeginContext(224, 22, true);
                WriteLiteral("前往测试&nbsp;&nbsp;&nbsp;");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(250, 29048, true);
            WriteLiteral(@"
        <h1><strong>对数据库中的各类对象进行相关权限管理、安全控制</strong></h1>
        <div>
            <p><strong><span style=""font-size: medium;"">1.数据库安全控制策略概述</span></strong></p>
            <p>安全性是评估一个数据库的重要指标，Oracle数据库从3个层次上采取安全控制策略：</p>
            <ul>
                <li>系统安全性。在系统级别上控制数据库的存取和使用机制，包括有效的用户名与口令、是否可以连接数据库、用户可以进行哪些系统操作等；</li>
                <li>数据安全性。在数据库模式对象级别上控制数据库的存取和使用机制。用户要对某个模式对象进行操作，必须要有操作的权限；</li>
                <li>
                    网络安全性。Oracle通过分发Wallet、数字证书、SSL安全套接字和数据密钥等办法来保证数据库的网络传输安全性。
                    <p>数据库的安全可以从以下几个方面进行管理：</p>
                </li>
                <li>用户账户管理</li>
                <li>用户身份认证方式管理。Oracle提供多种级别的数据库用户身份认证方式，包括系统、数据库、网络3种类型的身份认证方式</li>
                <li>权限和角色管理。通过管理权限和角色，限制用户对数据库的访问和操作</li>
                <li>数据加密管理。通过数据加密来保证网络传输的安全性</li>
                <li>表空间设置和配额。通过设置用户的存储表空间、临时表空间以及用户在表空间上使用的配额，可以有效控制用户对数据库存储空间的使用</li>
                <li>用户资源限制。通过概要文件设置，可以限制用户对数据库资源的使用</li>
            </ul>
            <p>数据库审计。监视和记录数据库中的活动，包括审");
            WriteLiteral(@"计所有的SQL语句、审计SQL权限、审计模式对象以及审计网络活动等。</p>
            <p>接下来将对数据库安全管理方法进行一 一讨论。</p>
            <p>&nbsp;<strong><span style=""font-size: medium;"">2.用户管理</span></strong></p>
            <p>用户是数据库的使用者和管理者，Oracle通过设置用户及安全属性来控制用户对数据库的访问。Oracle的用户分两类，一类是创建数据库时系统预定义的用户，一类是根据应用由DBA创建的用户。</p>
            <p><strong>2.1 预定义用户</strong></p>
            <p>在oracle创建时创建的用户，我们称为预定义用户，预定义用户根据作用不同分为3类：</p>
            <p>&nbsp;</p>
            <ul>
                <li>管理员用户：包括SYS,SYSTEM,SYSMAN,DBSNMP等。SYS是数据库中拥有最高权限的管理员，可以启动、关闭、修改数据库，拥有数据字典；SYSTEM是一个辅助的数据库管理员，不能启动和关闭数据库，但是可以进行一些管理工作，如创建和删除用户；SYSMAN是OEM的管理员，可以对OEM进行配置和管理；DBSNMP用户是OEM代理，用来监视数据库的。以上这些用户都不能删除。</li>
                <li>示例方案用户：在安装Oracle或使用odbc创建数据库时，如果选择了&rdquo;示例方案&rdquo;，会创建一些用户，在这些用户对应的schema中，有产生一些数据库应用案例。这些用户包括：BI、HR、OE、PM、IX、SH等。默认情况下，这些用户均为锁定状态，口令过期。</li>
                <li>内置用户：有一些Oracle特性或Oracle组件需要自己单独的模式，因此为他们创建了一些内置用户。如APEX_PUBLIC_USER、DIP等。默认情况下，这些用户均为锁定状态，口令过期。</li>
            </ul>
            <p>此外还有2个特殊的用户SCOTT和PUBLIC，SCOTT是一个用于测试网络连接的用");
            WriteLiteral(@"户，PUBLIC实际是一个用户组，数据库中任何用户都属于该用户组，如果要为数据库中的全部用户授予某种权限，只需要对PUBLIC授权即可。</p>
            <p><strong>2.2 用户属性</strong></p>
            <p>在创建用户时，必须使用安全属性对用户进行限制，用户的安全属性主要包括：</p>
            <ul>
                <li>用户名：在同一个数据库中，用户名是唯一的，并且不能与角色名相同；</li>
                <li>用户身份认证：Oracle采用多种方式进行身份认证，如数据库认证、操作系统认证、网络认证等；</li>
                <li>默认表空间：用户创建数据库对象时，如果没有显式指明存储在哪个表空间中，系统会自动将该数据库对象存储在当前用户的默认表空间，在Oracle 11g中，如果没有为用户指定默认表空间，则系统将数据库的默认表空间作为用户的默认表空间；</li>
                <li>临时表空间：临时表空间分配与默认表空间相似，如果不显式指定，系统会将数据库的临时表空间作为用户的临时表空间；</li>
                <li>表空间配额：表空间配额限制用户在永久表空间中可以使用的存储空间的大小，默认新建用户在表空间都没有配额，可以为每个用户在表空间上指定配额，也可授予用户UMLIMITED TABLESPACE系统权限，使用户在表空间的配额上不受限制。不需要分配临时表空间的配额；</li>
                <li>概要文件：每个用户必须具有一个概要文件，从会话级和调用级两个层次限制用户对数据库系统资源的使用，同时设置用户的口令管理策略。如果没有为用户指定概要文件，Oracle将自动为用户指定DEFAULT概要文件；</li>
                <li>设置用户的默认角色</li>
                <li>账户状态：创建用户时，可以设定用户的初始状态，包括口令是否过期和账户是否锁定等。</li>
            </ul>
            <p class=""_mce_tagged_br"">可以通过数据字典dba_users查询各个用户的属性</p>
");
            WriteLiteral(@"            <p><strong>2.3 创建用户</strong></p>
            <p>创建用户语法如下：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">CREATE</span> <span style=""color: #ff00ff;"">USER</span> <span style=""color: #ff00ff;"">user_name</span><span style=""color: #000000;"">  IDENTIFIED
</span><span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">BY password</span><span style=""color: #ff0000;"">]</span> <span style=""color: #808080;"">|</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">EXTERNALLY [AS &lsquo;certificate_DN&rsquo; | &lsquo;kerberos_principal_name'</span><span style=""color: #ff0000;"">]</span> ] <span style=""color: #808080;"">|</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">GLOBALLY [AS 'directory_DN'</span><span style=""color: #ff0000;"">]</span><span style=""color: #000000;""> ]
</span><span style=""color: #ff0000;"">[</span><span style=""color: #ff0000");
            WriteLiteral(@";"">DEFAULT TABLESPACE tablespace_name</span><span style=""color: #ff0000;"">]</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">TEMPORARY TABLESPACE tablespace_name | tablespace_group_name</span><span style=""color: #ff0000;"">]</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">QUOTA  n K | M | UNLIMITED ON tablespace_name </span><span style=""color: #ff0000;"">]</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">PROFILE profile_name</span><span style=""color: #ff0000;"">]</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">PASSWORD EXPIRE</span><span style=""color: #ff0000;"">]</span>
<span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">ACCOUNT LOCK | UNLOCK</span><span style=""color: #ff0000;"">]</span>;</pre>
            </div>
            <p>其中：</p>
            <p><span style=""font-size: small;"">-user_name：新创建的用户的名称； </span></p>
            <p><span style=""font-size: small;"">-IDENTIFIED：指明用户认证方式； <");
            WriteLiteral(@"/span></p>
            <p><span style=""font-size: small;"">-BY password：采用数据库身份认证，password为用户密码； </span></p>
            <p><span style=""font-size: small;"">-EXTERNALLY：指定用户采用外部认证，其中：①AS &lsquo;certificate_DN&rsquo;指定用户采用ssl外部身份认证；②AS &lsquo;kerberos_principal_name&rsquo;指定用户采用kerberos外部身份认证； </span></p>
            <p><span style=""font-size: small;"">-GLOBALLY AS &lsquo;directory_DN&rsquo;：指定用户采用全局身份认证； </span></p>
            <p><span style=""font-size: small;"">-DEFAULT TABLESPACE tablespace_name：设置用户的默认表空间； </span></p>
            <p><span style=""font-size: small;"">-TEMPORARY TABLESPACE tablespace_name | tablespace_group_name：设置用户临时表空间/表空间组； </span></p>
            <p><span style=""font-size: small;"">-QUOTA n K|M|UNLIMITED ON tablespace_name：指定用户在特定表空间上的配额； </span></p>
            <p><span style=""font-size: small;"">-PROFILE profile_name：为用户指定概要文件； </span></p>
            <p><span style=""font-size: small;"">-PASSWORD EXPIRE：指定用户密码到期，用户首次登陆时系统会要求改密码； </span></p>
            <p><span style=""font-size: smal");
            WriteLiteral(@"l;"">-ACCOUNT LOCK|UNLOCK：指定用户为锁定/非锁定状态，默认不锁定。</span></p>
            <p><strong>2.4 修改用户</strong></p>
            <p>修改用户采用ALTER实现，语句与CREATE USER基本相同，唯一不同的是多了DEFAULT ROLE选项，用于指定用户的默认角色：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">ALTER</span> <span style=""color: #ff00ff;"">USER</span> <span style=""color: #ff00ff;"">user_name</span><span style=""color: #000000;"">  
...
</span><span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">DEFAULT ROLE [role_list</span><span style=""color: #ff0000;"">]</span> <span style=""color: #808080;"">|</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">ALL [EXCEPT role_list</span><span style=""color: #ff0000;"">]</span>] <span style=""color: #808080;"">|</span><span style=""color: #000000;""> NONE ]
...
;</span></pre>
            </div>
<pre>其中： </pre>
            <p><span style=""font-size: small;"">-role_list：指定角色列表； </span></p>
       ");
            WriteLiteral(@"     <p><span style=""font-size: small;"">-ALL：指定全部角色； </span></p>
            <p><span style=""font-size: small;"">-EXCEPT role_list：除了role_list指定的角色之外的角色； </span></p>
            <p><span style=""font-size: small;"">-NONE：不指定角色</span> .</p>
            <p><strong>2.5 锁定与解锁用户</strong></p>
            <p>当用户被锁定后，就不能登录数据库了，但是用户的所有数据库对象仍然可以继续使用，当用户解锁后，用户就可以正常连接到数据库。</p>
            <p>在Oracle中，当账户不再使用时，就可以将其锁定。通常，对于不用的账户，可以进行锁定，而不是删除。</p>
            <p>例子，锁定与解锁scott用户：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #008080;"">/*</span><span style=""color: #008080;"">使用SYS锁定SCOTT账户，锁定之后无法在登录</span><span style=""color: #008080;"">*/</span><span style=""color: #000000;"">
SQL</span><span style=""color: #808080;"">&gt;</span> show <span style=""color: #ff00ff;"">user</span><span style=""color: #000000;"">;
</span><span style=""color: #ff00ff;"">USER</span><span style=""color: #000000;""> 为 ""SYS""
SQL</span><span style=""color: #8080");
            WriteLiteral(@"80;"">&gt;</span> <span style=""color: #0000ff;"">ALTER</span> <span style=""color: #ff00ff;"">USER</span><span style=""color: #000000;""> SCOTT ACCOUNT LOCK;

用户已更改。

SQL</span><span style=""color: #808080;"">&gt;</span> conn scott<span style=""color: #808080;"">/</span><span style=""color: #000000;"">tiger
ERROR:
ORA</span><span style=""color: #808080;"">-</span><span style=""font-weight: bold; color: #800000;"">28000</span>: the account <span style=""color: #0000ff;"">is</span><span style=""color: #000000;""> locked


警告: 您不再连接到 ORACLE。


</span><span style=""color: #008080;"">/*</span><span style=""color: #008080;"">解锁SCOTT账户，解锁后登录到数据库</span><span style=""color: #008080;"">*/</span><span style=""color: #000000;"">
SQL</span><span style=""color: #808080;"">&gt;</span> conn sys <span style=""color: #0000ff;"">as</span><span style=""color: #000000;""> sysdba
输入口令:
已连接。
SQL</span><span style=""color: #808080;"">&gt;</span> <span style=""color: #0000ff;"">ALTER</span> <span style=""color: #ff00ff;"">USER</span><span style=""color: #000");
            WriteLiteral(@"000;""> SCOTT ACCOUNT UNLOCK;

用户已更改。

SQL</span><span style=""color: #808080;"">&gt;</span> conn scott<span style=""color: #808080;"">/</span><span style=""color: #000000;"">tiger;
已连接。</span></pre>
            </div>
            <p><strong>2.6 删除用户</strong></p>
            <p>使用drop user删除用户，基本语法为：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">DROP</span> <span style=""color: #ff00ff;"">USER</span> <span style=""color: #ff00ff;"">user_name</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">CASCADE</span><span style=""color: #ff0000;"">]</span>;</pre>
            </div>
            <p>如果用户拥有数据库对象，则必须使用CASCADE选项，Oracle先删除用户的数据库对象，再删除该用户。</p>
            <p><strong>2.7 查询用户信息</strong></p>
            <p>在Oracle中，包含用户信息的数据字典如下：</p>
            <table style=""width: 700px;"" border=""0"" cellspacing=""0"" cellpadding=""1"">
                <tbody>
                    <tr style=""backgrou");
            WriteLiteral(@"nd: #d6d6d6;"">
                        <td valign=""top"" width=""160"">视图名称</td>
                        <td valign=""top"" width=""540"">说明</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">DBA_USERS</td>
                        <td valign=""top"" width=""540"">包含数据库的所有用户的详细信息（15项）</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">ALL_USERS</td>
                        <td valign=""top"" width=""540"">包含数据库所有用户的用户名、用户ID和用户创建时间（3项）</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">USER_USERS</td>
                        <td valign=""top"" width=""540"">包含当前用户的详细信息（10项）</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">DBA_TS_QUOTAS</td>
                        <td valign=""top"" width=""540"">包含所有用户的表空间配额信息</td>
                    </tr>
                    <tr>
                 ");
            WriteLiteral(@"       <td valign=""top"" width=""160"">USER_TS_QUOTAS</td>
                        <td valign=""top"" width=""540"">包含当前用户的表空间配额信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">V$SESSION</td>
                        <td valign=""top"" width=""540"">包含用户会话信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""160"">V$SESSTAT</td>
                        <td valign=""top"" width=""540"">包含用户会话统计信息</td>
                    </tr>
                </tbody>
            </table>
            <p><strong><span style=""font-size: medium;"">3.资源限制与口令管理</span></strong></p>
            <p>在数据库中，对用户的资源限制与用户口令管理是通过数据库概要文件（PROFILE）实现的，每个数据库用户必须具有一个概要文件，通常DBA将用户分为几种类型，为每种类型的用户单独创建一个概要文件。概要文件不是一个具体的文件，而是存储在SYS模式的几个表中的信息的集合。</p>
            <p><strong>3.1 资源限制</strong></p>
            <p>概要文件通过一系列资源管理参数，从会话级和调用级两个级别对用户使用资源进行限制。会话资源限制是对用户在一个会话过程中所能使用的资源进行限制，调用资源限制是对一条SQL语句在执行过程中所能使用的资源总量进行限制。资源限制的参数如下：</p>
            ");
            WriteLiteral(@"<ul>
                <li>CPU使用时间：在一个会话或调用过程中使用CPU的总量；</li>
                <li>逻辑读：在一个会话或一个调用过程中读取物理磁盘和逻辑内存数据块的总量；</li>
                <li>每个用户的并发会话数；</li>
                <li>用户连接数据库的最长时间；</li>
                <li>等</li>
            </ul>
            <p class=""_mce_tagged_br"">下面是scott用户的资源限制信息：</p>
            <p><a href=""http://images2015.cnblogs.com/blog/823295/201701/823295-20170122220205082-128458684.png""><img title=""resource"" src=""https://images2015.cnblogs.com/blog/823295/201701/823295-20170122220205488-642874543.png"" alt=""resource"" width=""368"" height=""341"" border=""0"" /></a></p>
            <p><strong>3.2 口令管理</strong></p>
            <p>oracle概要文件用于数据库口令管理的主要参数如下：</p>
            <ul>
                <li>FAILED_LOGIN_ATTEMPTS：限制用户失败次数，一旦达到失败次数，账户锁定；</li>
                <li>PASSWORD_LOCK_TIME：用户登录失败后，账户锁定的时间长度；</li>
                <li>PASSWORD_LIFE_TIME：用户口令的有效天数，达到设定天数后，口令过期，需要重新设置新的口令；</li>
            </ul>
            <ul>
                <li>等</li>
            </ul>
         ");
            WriteLiteral(@"   <p>下图是scott用户的口令管理参数设置信息：</p>
            <p><a href=""http://images2015.cnblogs.com/blog/823295/201701/823295-20170122220205957-585987608.png""><img title=""passwordmanager"" src=""https://images2015.cnblogs.com/blog/823295/201701/823295-20170122220206363-1075658762.png"" alt=""passwordmanager"" width=""354"" height=""298"" border=""0"" /></a></p>
            <p><strong>3.3 查询概要文件信息</strong></p>
            <p>在Oracle 11g中，包含概要信息的数据字典如下：</p>
            <table style=""width: 700px;"" border=""0"" cellspacing=""0"" cellpadding=""1"">
                <tbody>
                    <tr style=""background: #d6d6d6;"">
                        <td style=""text-align: left;"" valign=""top"" width=""198"">视图名称</td>
                        <td valign=""top"" width=""502"">说明</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""198"">DBA_USERS</td>
                        <td valign=""top"" width=""502"">包含数据库中所有用户属性信息，包括使用的概要文件（profile）</td>
                    </tr>
                    <tr>");
            WriteLiteral(@"
                        <td valign=""top"" width=""198"">DBA_PROFILES</td>
                        <td valign=""top"" width=""502"">包含数据库中所有的概要文件及其资源设置、口令管理设置等信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""198"">USER_PASSWORD_LIMITS</td>
                        <td valign=""top"" width=""502"">包含当前用户的概要文件的口令限制参数设置信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""198"">USER_RESOURCE_LIMITS</td>
                        <td valign=""top"" width=""502"">包含当前用户的概要文件的资源限制参数设置信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""198"">RESOURCE_COST</td>
                        <td valign=""top"" width=""502"">每个会话使用资源的统计信息</td>
                    </tr>
                </tbody>
            </table>
            <p><br /><strong><span style=""font-size: medium;"">4.权限管理</span></strong></p>
            <p>在Oracle数据库中，用户权限主要分为系统权限与对象权限两类。系统权限是指在数据库基本执行某些操作的权");
            WriteLiteral(@"限，或针对某一类对象进行操作的权限，对象权限主要是针对数据库对象执行某些操作的权限，如对表的增删（删除数据）查改等。</p>
            <p><strong>4.1 系统权限</strong></p>
            <p>（4.1.1）系统权限概述</p>
            <p>在Oracle 11g中，一共有200多项系统权限，可通过数据字典system_privilege_map获得所有的系统权限。</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre>SQL<span style=""color: #808080;"">&gt;</span> <span style=""color: #0000ff;"">select</span> <span style=""color: #808080;"">*</span> <span style=""color: #0000ff;"">from</span><span style=""color: #000000;""> system_privilege_map;                      
                                                              
 PRIVILEGE NAME                                       PROPERTY
</span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">-------- ---------------------------------------- ----------</span>
                <span style=""color: #808080;"">-</span><span style=""font-weight: bold; color: #800000;"">3</span> <span style=""color: #0000ff;"">ALTER</span> SY");
            WriteLiteral(@"STEM                                      <span style=""font-weight: bold; color: #800000;"">0</span>
                <span style=""color: #808080;"">-</span><span style=""font-weight: bold; color: #800000;"">4</span> AUDIT SYSTEM                                      <span style=""font-weight: bold; color: #800000;"">0</span>
                <span style=""color: #808080;"">-</span><span style=""font-weight: bold; color: #800000;"">5</span> <span style=""color: #0000ff;"">CREATE</span> SESSION                                    <span style=""font-weight: bold; color: #800000;"">0</span>
                <span style=""color: #808080;"">-</span><span style=""font-weight: bold; color: #800000;"">6</span> <span style=""color: #0000ff;"">ALTER</span> SESSION                                     <span style=""font-weight: bold; color: #800000;"">0</span><span style=""color: #000000;"">
       ...          ...                                    ...
</span><span style=""font-weight: bold; color: #800000;"">208</span> rows selected</pre>
    ");
            WriteLiteral(@"        </div>
            <p>（4.1.2）系统权限的授予</p>
            <p>授予用户系统权限的SQL语法为：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">GRANT</span> system_privilege_list <span style=""color: #808080;"">|</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">ALL PRIVILEGES</span><span style=""color: #ff0000;"">]</span>

<span style=""color: #0000ff;"">TO</span> <span style=""color: #ff00ff;"">user_name_list</span> <span style=""color: #808080;"">|</span> role_list <span style=""color: #808080;"">|</span> <span style=""color: #0000ff;"">PUBLIC</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">WITH ADMIN OPTION</span><span style=""color: #ff0000;"">]</span>;</pre>
            </div>
            <p>其中：</p>
            <p><span style=""font-size: small;"">-system_privilege_list：系统权限列表，以逗号分隔；</span></p>
            <p><span style=""font-size: small;"">-ALL PRIVILEGES：所有系统权限；</span>");
            WriteLiteral(@"</p>
            <p><span style=""font-size: small;"">-user_name_list：用户列表，以逗号分隔；</span></p>
            <p><span style=""font-size: small;"">-role_list：角色列表，以逗号分隔；</span></p>
            <p><span style=""font-size: small;"">-PUBLIC：给数据库中所有用户授权；</span></p>
            <p><span style=""font-size: small;"">-WITH ADMIN OPTION：允许系统权限接收者再将权限授予其它用户</span></p>
            <p>在授予用户系统权限时，需要注意：</p>
            <ul>
                <li>只有DBA用户才有alter database；</li>
                <li>应用开发者一般需要拥有create table、create view、create index等系统权限；</li>
                <li>普通用户一般只需具有create session权限</li>
            </ul>
            <ul>
                <li>在授权用户时带有with admin option子句时，用户可以将获得的权限再授予其它用户。</li>
            </ul>
            <p>（4.1.3）系统权限的回收</p>
            <p>回收用户系统权限的SQL语法如下：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">REVOKE</span> system_privilege_list <span style=""color: #808080;"">|</span> <s");
            WriteLiteral(@"pan style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">ALL PRIVILEGES</span><span style=""color: #ff0000;"">]</span>

<span style=""color: #0000ff;"">FROM</span> user_name_list <span style=""color: #808080;"">|</span> role_list <span style=""color: #808080;"">|</span> <span style=""color: #0000ff;"">PUBLIC</span></pre>
            </div>
            <p>回收用户系统权限需要注意以下3点：</p>
            <ul>
                <li>多个管理员授予同一个用户相同的权限，其中一个管理员回收其授予用户的系统权限，该用户将不再具有该系统权限；</li>
                <li>为了回收用户系统权限的传递性（授权时使用了with admin option），须先回收该系统权限，在重新授予用户该权限；</li>
                <li>如果一个用户的权限具有传递性，并且给其它用户授权，那么该用户系统权限被收回后，其它用户的系统权限并不会受影响；</li>
            </ul>
            <p><strong>4.2 对象权限</strong></p>
            <p><span style=""text-decoration: underline;"">对象权限是指对某个特定模式对象的操作权限。数据库模式对象所有者拥有该对象的所有对象权限，对象权限的管理实际上是对象所有者对其他用户操作该对象的权限管理</span>。在Oracle数据库中，不同类型的对象具有不同的对象权限，而有的对象并没有对象权限，只能通过系统权限进行管理，如簇、索引、触发器、数据库链接等。</p>
            <p>（1）对象权限的授予</p>
            <p>在Oracle数据库中，用户可以直接访问同名Schema下的数据库对象，如果需要访问其它S");
            WriteLiteral(@"chema下的数据库对象，就需要具有相应的对象权限。对象权限授予的SQL语法为：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">GRANT</span> object_privilege_list <span style=""color: #808080;"">|</span> <span style=""color: #808080;"">ALL</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">PRIVILEGES</span><span style=""color: #ff0000;"">]</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;""> (column,...) </span><span style=""color: #ff0000;"">]</span> 
<span style=""color: #0000ff;"">ON</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">schema.</span><span style=""color: #ff0000;"">]</span><span style=""color: #000000;"">object 
</span><span style=""color: #0000ff;"">TO</span> user_name_list <span style=""color: #808080;"">|</span> role_list <span style=""color: #808080;"">|</span> <span style=""color: #0000ff;"">PUBLIC</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000");
            WriteLiteral(@";"">WITH GRANT OPTION</span><span style=""color: #ff0000;"">]</span>;</pre>
            </div>
            <p>其中：</p>
            <p>-object_privilege_list：对象权限列表，以逗号分隔；</p>
            <p>-ALL PRIVILEGES：全部权限；</p>
            <p>-[schema.]object：待授权的对象；</p>
            <p>-user_name_list：用户列表，以逗号分隔；</p>
            <p>-role_list：角色列表，以逗号分隔；</p>
            <p>-PUBLIC：所有用户</p>
            <p>（2）对象权限的回收</p>
            <p>回收对象权限的SQL语法为：</p>
            <div class=""cnblogs_code"" style=""background-color: #f5f5f5; border: #cccccc 1px solid; padding: 5px;"">
<pre><span style=""color: #0000ff;"">REVOKE</span> object_privilege_list <span style=""color: #808080;"">|</span> <span style=""color: #808080;"">ALL</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">PRIVILEGES</span><span style=""color: #ff0000;"">]</span>
<span style=""color: #0000ff;"">ON</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">schema.</span><span style=""color: #ff0000;"">]</span><span style=""color: ");
            WriteLiteral(@"#000000;"">object
</span><span style=""color: #0000ff;"">FROM</span> user_name_list <span style=""color: #808080;"">|</span> role_list <span style=""color: #808080;"">|</span> <span style=""color: #0000ff;"">PUBLIC</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">CASCADE CONSTRAINTS</span><span style=""color: #ff0000;"">]</span> <span style=""color: #808080;"">|</span> <span style=""color: #ff0000;"">[</span><span style=""color: #ff0000;"">FORCE</span><span style=""color: #ff0000;"">]</span>;</pre>
            </div>
            <p>其中：</p>
            <p>-CASCADE CONSTRAINTS：当回收REFERENCE对象权限或回收ALL PRIVILEGES，删除利用REFERENCES对象权限创建的外键约束；</p>
            <p>-FORCE：当回收在表中被使用的用户自定义对象类型的EXECUTE权限时，必须指定FORCE关键字。</p>
            <p>回收对象权限需要注意以下3点：</p>
            <ul>
                <li>多个管理员授予同一个用户相同的对象权限，一个管理员将该对象权限回收后，该用户不再具有该对象权限；</li>
                <li>为了回收用户对象权限的传递性，须先回收该对象权限，再重新赋予给用户该对象权限；</li>
                <li>如果一个用户的对象权限具有传递性，并且已经给其它用户授权，那么该用户的对象权限被回收后，其它用户的对象权限也将被收回。（值得注意的是，这一条与系统权限传递性");
            WriteLiteral(@"的回收不相同）。</li>
            </ul>
            <p><strong>4.3 查询权限信息</strong></p>
            <table style=""width: 700px;"" border=""0"" cellspacing=""0"" cellpadding=""1"">
                <tbody>
                    <tr style=""background: #d6d6d6;"">
                        <td valign=""top"" width=""171"">视图名称</td>
                        <td valign=""top"" width=""529"">说明</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">DBA_SYS_PRIVS</td>
                        <td valign=""top"" width=""529"">包含所有<span style=""text-decoration: underline;""><strong>用户</strong>和<strong>角色</strong></span>获得的系统权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">ALL_SYS_PRIVS</td>
                        <td valign=""top"" width=""529"">包含当前用户可见的全部<span style=""text-decoration: underline;""><strong>用户</strong>和<strong>角色</strong></span>获得的系统权限信息</td>
                    </tr>
                    <tr>
                ");
            WriteLiteral(@"        <td valign=""top"" width=""171"">USER_SYS_PRIVS</td>
                        <td valign=""top"" width=""529"">当前用户获得的系统权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">DBA_TAB_PRIVS</td>
                        <td valign=""top"" width=""529"">包含所有<span style=""text-decoration: underline;""><strong>用户</strong>和<strong>角色</strong></span>获得的对象权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">ALL_TAB_PRIVS</td>
                        <td valign=""top"" width=""529"">包含当前用户可见的全部<span style=""text-decoration: underline;""><strong>用户</strong>和<strong>角色</strong></span>获得的对象权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">USER_TAB_PRIVS</td>
                        <td valign=""top"" width=""529"">当前用户获得的对象权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">DBA_CO");
            WriteLiteral(@"L_PRIVS</td>
                        <td valign=""top"" width=""529"">包含数据库中所有列对象的权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">ALL_COL_PRIVS</td>
                        <td valign=""top"" width=""529"">包含当前用户可见的所有列对象的权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">USER_COL_PRIVS</td>
                        <td valign=""top"" width=""529"">当前用户拥有的或授予其它用户的所有列对象的权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""171"">SESSION_PRIVS</td>
                        <td valign=""top"" width=""529"">当前会话可以使用的所有权限信息</td>
                    </tr>
                </tbody>
            </table>
            <p><span style=""font-size: medium;""><strong>5.角色管理</strong></span></p>
            <p>假如我们直接给每一个用户赋予权限，这将是一个巨大又麻烦的工作，同时也不方便DBA进行管理。通过采用角色，使得：</p>
            <ul>
                <li>权限管理更方便。将角色赋予多个用户，实现不同用户相同的授权。如果要修改这些用户的权限，");
            WriteLiteral(@"只需修改角色即可；</li>
                <li>角色的权限可以激活和关闭。使得DBA可以方便的选择是否赋予用户某个角色；</li>
                <li>提高性能，使用角色减少了数据字典中授权记录的数量，通过关闭角色使得在语句执行过程中减少了权限的确认。</li>
            </ul>
            <p><img src=""https://images2015.cnblogs.com/blog/823295/201701/823295-20170115234550760-1274497388.png"" alt=""image"" width=""671"" height=""273"" /></p>
            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 图. 用户、角色、权限关系图</p>
            <p>由于个人接触的数据库用户较少，没有单独创建角色，故角色的创建、修改、删除、激活、禁用、授予、回收不再一一讲述，只要知道如何查询角色信息即可。</p>
            <p>在Oracle中，包含角色的数据字典如下：</p>
            <table style=""width: 700px;"" border=""0"" cellspacing=""0"" cellpadding=""1"">
                <tbody>
                    <tr style=""background: #d6d6d6;"">
                        <td valign=""top"" width=""164"">视图名称</td>
                        <td valign=""top"" width=""536"">说明</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">D");
            WriteLiteral(@"BA_ROLE_PRIVS</td>
                        <td valign=""top"" width=""536"">包含数据库中所有用户拥有的角色信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">USER_ROLE_PRIVS</td>
                        <td valign=""top"" width=""536"">包含当前用户拥有的角色信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">ROLE_ROLE_PRIVS</td>
                        <td valign=""top"" width=""536"">角色拥有的角色信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">ROLE_SYS_PRIVS</td>
                        <td valign=""top"" width=""536"">角色拥有的系统权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">ROLE_TAB_PRIVS</td>
                        <td valign=""top"" width=""536"">角色拥有的对象权限信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">DBA_ROLES</td>
           ");
            WriteLiteral(@"             <td valign=""top"" width=""536"">当前数据库中所有角色及其描述信息</td>
                    </tr>
                    <tr>
                        <td valign=""top"" width=""164"">SESSION_ROLES</td>
                        <td valign=""top"" width=""536"">当前会话所具有的角色信息</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
