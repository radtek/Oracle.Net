#pragma checksum "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\Home\Scene8.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "301b578bc45123daee75fe1d93204be153cf009f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Scene8), @"mvc.1.0.view", @"/Views/Home/Scene8.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Scene8.cshtml", typeof(AspNetCore.Views_Home_Scene8))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net;

#line default
#line hidden
#line 2 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\_ViewImports.cshtml"
using Oracle.Net.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"301b578bc45123daee75fe1d93204be153cf009f", @"/Views/Home/Scene8.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc752d9315d7ca55328b89a9ad65e59d586dbd3d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Scene8 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/teaching"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("float:right;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/home/testonline/8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\DELL\Desktop\Oracle.Net\Oracle.Net\Views\Home\Scene8.cshtml"
  
    ViewData["Title"] = "Scene8";

#line default
#line hidden
            BeginContext(44, 66, true);
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"news-detail\">\r\n        ");
            EndContext();
            BeginContext(110, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "352ef7d4e8cc4cb2823e75ba16eaa6dd", async() => {
                BeginContext(157, 2, true);
                WriteLiteral("返回");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(163, 10, true);
            WriteLiteral("\r\n        ");
            EndContext();
            BeginContext(173, 77, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2051f5490c454a5a9f2a0b85a0dfbe45", async() => {
                BeginContext(224, 22, true);
                WriteLiteral("前往测试&nbsp;&nbsp;&nbsp;");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(250, 14713, true);
            WriteLiteral(@"
        <h1><strong>数据库中的事务处理及备份与恢复。</strong></h1>
        <div>
            <div class=""post"">
                <div class=""postTitle"">
                    <h1><a id=""cb_post_title_url"" class=""postTitle2"" href=""https://www.cnblogs.com/zhengcheng/p/4190221.html"">Oracle基础 数据库备份和恢复</a></h1>
                </div>
                <div id=""cnblogs_post_body"" class=""blogpost-body"">
                    <p><span style=""font-size: 16px;""><strong><span style=""font-family: 'Microsoft YaHei';"">一、为什么需要数据备份</span></strong></span></p>
                    <p>　　造成数据丢失的主要原因：</p>
                    <p>　　1、介质故障。</p>
                    <p>　　2、用户的错误操作。</p>
                    <p>　　3、服务器的彻底崩溃。</p>
                    <p>　　4、计算机病毒。</p>
                    <p>　　5、不可预料的因素。</p>
                    <p>&nbsp;</p>
                    <p>　　Oracle中故障类型分为以下4种。</p>
                    <p>　　<strong>1、语句故障：</strong></p>
                    <p>　　执行SQL语句过程发生的逻辑故障可导致语句故障。如果用户编写的SQL语句无效，就会发生语句故障。Oracle可自我修复语句故障，撤销语句产生的而印象，并将控制权");
            WriteLiteral(@"交给应用程序。</p>
                    <p>　　</p>
                    <p>　<strong>　2、用户进程故障</strong></p>
                    <p>　　当用户程序出错而无法访问Oracle数据库时，就会发生用户进程故障。用户进程故障只会导致当前用户无法操作数据库，但不会印象其他用户进程，当用户进程出现故障时，进程监控程序(PMON)会自动执行进程恢复。</p>
                    <p>&nbsp;</p>
                    <p>　　<strong>3、实例故障</strong></p>
                    <p>　　当Oracle 数据库实例由于硬件或软件问题而无法继续运行时，就会发生实例故障。硬件问题包括意外断电，而然间问题可能是服务器操作系统崩溃。如果发现实例故障，Oracle会自动完成实例修复。实例修复将数据库恢复到与故障之前的事务一致状态，Oracle会自动回滚未提交的数据。</p>
                    <p>&nbsp;</p>
                    <p>　　<strong>4、介质故障</strong></p>
                    <p>　　介质故障是当一个数据库文件或者磁盘不能读或者不能写时出现的故障。</p>
                    <p>&nbsp;</p>
                    <p><span style=""font-family: 'Microsoft YaHei'; font-size: 16px;""><strong>二、备份</strong></span></p>
                    <p>　　备份就是把创建一个数据库副本到磁盘。从不同角度分类如下：</p>
                    <p>　　<strong>1、从物理角度与逻辑角度分类：</strong></p>
                    <p>　　（1）物理备份：对数据库操作系统的物理文件（如数据文件、控制文件和日志文件等）的备份。物理备份又可分为脱机备份（冷备份）和联机备份（热备份），前者是在关闭数据库的时");
            WriteLiteral(@"候进行的，后者对运行在归档日志方式的数据库进行备份。</p>
                    <p>　　（2）逻辑备份：对数据库逻辑组件（如表和存储过程等数据对象）的备份。</p>
                    <p>　　<strong>2、从数据库的备份策略角度分类：</strong></p>
                    <p>　　（1）完全备份：每次对数据进行完整备份。</p>
                    <p>　　（2）增量备份：值有那些在上次完全备份或者增量备份后备修改的文件才会被备份。优点是备份数据量小，需要的时间短，缺点是恢复的时候需要依赖之前的备份记录，出问题的风险较大。例如：如果在星期一进行完全备份，在星期二至星期五进行增量备份。如果星期五数据被破坏了，则数据恢复需要星期一的完全备份和从星期二至星期五的所有增量备份。</p>
                    <p>　　（3）差异备份：备份那些从上次完全备份之后被修改过得文件。因此从差异备份中恢复数据的时间长短，因此只需要两份数据（最后一次完全备份和最后一次差异备份），缺点是每次备份的时间较长。例如：如果在星期一进行完全备份，在星期二到星期五进行了差异备份，如果星期五数据被破坏了，则数据恢复只需要星期的完全备份和星期四的差量备份。</p>
                    <p>　　<span style=""color: #ff0000;"">增量备份和差异备份的区别：增量备份需要保留所有增量备份的数据；差异备份只需要保留最后一次差异备份的数据。</span></p>
                    <p>&nbsp;</p>
                    <p><strong><span style=""font-family: 'Microsoft YaHei'; font-size: 16px;"">三、恢复</span></strong></p>
                    <p>　　恢复就是发生故障后，利用已备份的数据文件或控制文件，重新建立一个完整的数据库。恢复分为两种类型:</p>
                    <p>　　1、实例恢复：当Oracle实例出现失败后，Oracle自动进行的恢复。</p>
            ");
            WriteLiteral(@"        <p>　　2、介质恢复：当存放数据库的介质出现故障时所做的恢复。介质恢复又分为<span style=""color: #0000ff;"">完全恢复</span>和<span style=""color: #0000ff;"">不完全恢复</span>。</p>
                    <p>　　　　完全恢复：将数据库恢复到数据库失败时的状态。</p>
                    <p>　　　　不完全恢复：将数据库恢复到数据库失败前的某一时刻的状态。</p>
                    <p>&nbsp;</p>
                    <p><strong><span style=""font-family: 'Microsoft YaHei'; font-size: 16px;"">四、导出</span></strong></p>
                    <p>　　<strong><span style=""font-family: 'Microsoft YaHei';"">（一）使用数据泵技术：</span></strong></p>
                    <p>　　<strong>1、expdp的导出方式：</strong></p>
                    <p>　　　　1）数据库方式：整个数据被导入到操作系统文件中。</p>
                    <p>　　　　2）用户模式：导出一个或者多个用户下的所有数据和元数据。</p>
                    <p>　　　　3）表方式：到处一组表的所有数据和元数据。</p>
                    <p>　　　　4）表空间方式：用于提取一个表空间中所有的数据和元数据，另外还提取依赖于指定表空间列表中所有对象的任何依赖对象。&nbsp;</p>
                    <p>　　　　<span style=""color: #3366ff;"">转储文件：由数据泵到处程序所创建的文件成为转储文件，在单个数据泵导出作业期间所有的转储文件称为转储文件集。</span></p>
                    <p>&nbsp;</p>
                 ");
            WriteLiteral(@"   <p>　　<strong>2、基于命令行导出</strong></p>
                    <p><strong>　 &nbsp;语法：<br /></strong></p>
                    <p>　　c:\expdb&nbsp;system/password directory=pbdir dumpfile=pb.dmp&nbsp;full=y&nbsp;tables=table_list tablespaces=tablesapce_list schemas=schema_list &nbsp;　　remap_schema=user1:user2&nbsp;nologfile=y sqlfile=pb.sql</p>
                    <p>　　system/passwrod：用户名和密码</p>
                    <p>　　directory：数据库目录对象</p>
                    <p>　　dumpfile：指定转储文件</p>
                    <p>　　full=y：表示实施的全部导入</p>
                    <p>　　tables=table_list：表示导入表的列表</p>
                    <p>&nbsp; &nbsp; &nbsp; schemas=schema_list：表示导入的用户模式</p>
                    <p>&nbsp; &nbsp; &nbsp;&nbsp;tablespaces=tablesapce_list：表示导入的表空间</p>
                    <p>&nbsp; &nbsp; &nbsp;&nbsp;remap_schema=user1:user2：表示从user1导入到user2中</p>
                    <p>　　nologfile=y：表示不进行日志操作</p>
                    <p>　　sqlfile：表示将元数据（DDL语句）写入到指定文件中。</p>
                    <p>　　<strong>注意：如果需要导出完全数据库，必须");
            WriteLiteral(@"具备exp_full_database权限。</strong></p>
                    <p>　　<strong>1）数据库方式：</strong>　　　　</p>
                    <p>　　注意：如果需要导出完全数据库，必须具备exp_full_database权限。</p>
                    <p>　　expdp scott/scott@accp directory=dump_dir dumpfile=full.dmp full=y</p>
                    <p>　　　　</p>
                    <p>　　<strong>2）用户模式方式：</strong>　　　　</p>
                    <p>　　expdp scott/scott@accp directory=dump_dir dumpfile=scottschema.dmp schemas=scott</p>
                    <p>&nbsp;　　　 &nbsp;</p>
                    <p>　　<strong>3）表导出方式：</strong>　　　　</p>
                    <p>　　<span style=""line-height: 1.5;"">expdp scott/scott@accp directory=dump_dir dumpfile=tables</span>.dmp tables=emp,dept,bonus,salgrade&nbsp;content=data_only</p>
                    <p>　　说明：</p>
                    <p>　　content=data_only：data_only表示只导出表中的数据，不导出元数据；metadata_only：则表示只导出元数据而不导出表中的数据。如果不写，则两者全部导出。　　</p>
                    <p>&nbsp;</p>
                    <p>　　<strong>4）表空间导出方式：</strong><em id=""__mceDel"" st");
            WriteLiteral(@"yle=""line-height: 1.5;"">　　　　</em></p>
                    <p>　　expdp scott/scott@accp directory=dump_dir dumpfile=tablespace.dmp tablespaces=users</p>
                    <p>　　　　</p>
                    <p>　　<strong>3、DBMS_DATAPUMP进行数据泵导出</strong></p>
                    <p>　　使用这种方式比直接使用命令方式要麻烦一些，但是却从数据库作业调度中安排数据泵导出作业的运行日程提供了方便，为数据泵导出提供了更好的功能度和控制度。</p>
                    <div class=""cnblogs_code"">
<pre><span style=""color: #0000ff;"">declare</span> 
                        <span style=""color: #008080;"">--</span><span style=""color: #008080;"">创建数据泵工作句柄</span>
  h1 <span style=""color: #0000ff;"">NUMBER</span><span style=""color: #000000;"">;
</span><span style=""color: #0000ff;"">begin</span>
                        <span style=""color: #008080;"">--</span><span style=""color: #008080;"">建立一个用户定义的数据泵做schema的方案备份。</span>
    h1 :<span style=""color: #808080;"">=</span> DBMS_DATAPUMP.<span style=""color: #0000ff;"">open</span>(operation <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span>");
            WriteLiteral(@"<span style=""color: #ff0000;"">export</span><span style=""color: #ff0000;"">'</span>,job_mode <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">schema</span><span style=""color: #ff0000;"">'</span><span style=""color: #000000;"">);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">定义存储文件</span>
    DBMS_DATAPUMp.add_file(handle <span style=""color: #808080;"">=&gt;</span> h1,filename <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">es_shop.dmp</span><span style=""color: #ff0000;"">'</span><span style=""color: #000000;"">);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">定义过滤条件</span>
    DBMS_DATAPUMP.metadata_filter(handle <span style=""color: #808080;"">=&gt;</span> h1,name <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">schema_expr</span><span style=""color: #ff0000;"">'</spa");
            WriteLiteral(@"n>,value <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">in</span><span style=""color: #ff0000;"">''</span><span style=""color: #ff0000;"">SHOP_USER</span><span style=""color: #ff0000;"">'''</span><span style=""color: #000000;"">);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">启动数据泵会话</span>
    DBMS_DATAPUMP.start_job(handle <span style=""color: #808080;"">=&gt;</span><span style=""color: #000000;""> h1);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">断开数据泵会话</span>
    DBMS_DATAPUMP.detach(handle <span style=""color: #808080;"">=&gt;</span><span style=""color: #000000;""> h1);
</span><span style=""color: #0000ff;"">end</span><span style=""color: #000000;"">;

</span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">默认保存路径：C:\Oracle11g\admin\orcl\dpdump</span></pre>
                    </div>
                    <p>&nbsp;</p>
                    <p>　　</p>
               ");
            WriteLiteral(@"     <p><strong><span style=""font-family: 'Microsoft YaHei'; font-size: 16px;"">五、导入</span></strong></p>
                    <p>　　<strong>（一）数据泵导入模式</strong></p>
                    <p><strong>　　1、导出方式</strong></p>
                    <p>　　1）全部导入模式：一个导出文件集的全部内容被装入，该导出文件集不一定是全数据库方式进行导出的。</p>
                    <p>　　2）用户模式：指定文件集中的一个用户列表的全部内容被导入。</p>
                    <p>　　3、表模式：指定表和相依对象从导出文件中得到导入。</p>
                    <p>　　4、表空间模式：指定文件集中属于表空间列表内的所有内容都被导入。</p>
                    <p>&nbsp;</p>
                    <p>　　<strong>2、使用命令行导入</strong></p>
                    <p>　　语法：</p>
                    <p>　　c:\impdp system/password directory=pbdir dumpfile=pb.dmp full=y&nbsp;tables=table_list tablespaces=tablesapce_list schemas=schema_list &nbsp;remap_schema=user1:user2&nbsp;nologfile=y sqlfile=pb.sql</p>
                    <p><em id=""__mceDel"">　　system/passwrod：用户名和密码</em></p>
                    <p>　　directory：数据库目录对象</p>
                    <p>　　dumpfile：指定转储文件</p>
                    <p>　　f");
            WriteLiteral(@"ull=y：表示实施的全部导入</p>
                    <p>　　tables=table_list：表示导入表的列表</p>
                    <p>&nbsp; &nbsp; &nbsp; schemas=schema_list：表示导入的用户模式</p>
                    <p>&nbsp; &nbsp; &nbsp;&nbsp;tablespaces=tablesapce_list：表示导入的表空间</p>
                    <p>&nbsp; &nbsp; &nbsp;&nbsp;<em id=""__mceDel"">remap_schema=user1:user2：表示从user1导入到user2中</em></p>
                    <p>　　nologfile=y：表示不进行日志操作</p>
                    <p>　　sqlfile：表示将元数据（DDL语句）写入到指定文件中。</p>
                    <p>　　</p>
                    <p>　　例：</p>
                    <p>　　<strong>1）导入整个数据库：</strong>　　</p>
                    <p>　　impdp scott@accp directory=dump_dir dumpfile=FULL.DMP full=y</p>
                    <p>　　<strong>2）导入表空间：　</strong>　</p>
                    <p>　　impdp&nbsp;scott/scott@accp directory=dump_dir dumpfile=tablespace.DMP tablespaces=mytest</p>
                    <p>　　<strong>3）导入scott用户下的所有表：　</strong>　</p>
                    <p>　　impdp&nbsp;scott/scott@accp directory=dump_dir dumpfile=TA");
            WriteLiteral(@"BLES.DMP tables=emp,dept,bonus,salgrade</p>
                    <p>　　<strong>4）将导出的scott用户下的dept和emp表导入到mytest用户下</strong></p>
                    <p>　　<em id=""__mceDel"" style=""line-height: 1.5;"">impdp scott/scott@accp directory=dump_dir dumpfile=SCHEMA.DMP tables=dept,emp remap_schema=scott:mytest</em></p>
                    <p><em id=""__mceDel"">　　</em></p>
                    <p>　　<strong>3、<strong>DBMS_DATAPUMP进行数据泵导入</strong></strong></p>
                    <p>　　</p>
                    <div class=""cnblogs_code"">
<pre><span style=""color: #0000ff;"">declare</span> 
                        <span style=""color: #008080;"">--</span><span style=""color: #008080;"">创建数据泵句柄</span>
    h1 <span style=""color: #0000ff;"">NUMBER</span><span style=""color: #000000;"">;  
</span><span style=""color: #0000ff;"">begin</span>
                        <span style=""color: #008080;"">--</span><span style=""color: #008080;"">建立一个用户定义的数据泵通过数据泵连接orcllib进行访问。</span>
    h1 :<span style=""color: #808080;"">=</span> DBMS_DATAPUMP.<");
            WriteLiteral(@"span style=""color: #0000ff;"">open</span>(operation <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">IMPORT</span><span style=""color: #ff0000;"">'</span>,job_mode <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">schema</span><span style=""color: #ff0000;"">'</span>,remote_link <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">orcllib</span><span style=""color: #ff0000;"">'</span><span style=""color: #000000;"">);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">把shop_dev_data对象模式导入到shop_back对象模式中。</span>
    DBMS_DATAPUMP.metadata_remap(handle <span style=""color: #808080;"">=&gt;</span> h1,name <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">REMAP_SCHEMA</span><span style=""color: #ff0000;"">'</span>,old_value <span style=""color: #808080;"">=&gt");
            WriteLiteral(@";</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">SHOP_DEV_DATA</span><span style=""color: #ff0000;"">'</span>,value <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">SHOP_BACK</span><span style=""color: #ff0000;"">'</span><span style=""color: #000000;"">);
  </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">将日志写入shop.log文件中</span>
    DBMS_DATAPUMP.add_file(handle <span style=""color: #808080;"">=&gt;</span> h1,filename <span style=""color: #808080;"">=&gt;</span> <span style=""color: #ff0000;"">'</span><span style=""color: #ff0000;"">shop.log</span><span style=""color: #ff0000;"">'</span>,filetype <span style=""color: #808080;"">=&gt;</span><span style=""color: #000000;""> DBMS_DATAPUMP.KU$_FILE_TYPE_LOG_FILE);
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">启动数据泵</span>
    DBMS_DATAPUMP.start_job(handle <span style=""color: #808080;"">=&gt;</span><span style=""color: #000000;""> h1");
            WriteLiteral(@");
    </span><span style=""color: #008080;"">--</span><span style=""color: #008080;"">断开数据泵连接</span>
    DBMS_DATAPUMP.detach(handle <span style=""color: #808080;"">=&gt;</span><span style=""color: #000000;""> h1);
</span><span style=""color: #0000ff;"">end</span>;</pre>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
